#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.8.1
# from Racc grammar file "config.racc".
#

require 'racc/parser.rb'

require "./src/config/config.rex"
class CollectdConfig < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    13,    14,    15,    16,    17,     3,     3,    30,    12,     3,
     9,     5,    31,    13,    14,    15,    16,    17,     3,    26,
    33,     3,     9,    22,    34,     9,     5,    13,    14,    15,
    16,    17,    28,     3,     3,    36,    37,     9,    22,    13,
    14,    15,    16,    17,    38 ]

racc_action_check = [
    21,    21,    21,    21,    21,    22,     0,    21,     1,     5,
     0,     0,    22,    29,    29,    29,    29,    29,     6,    12,
    29,    10,     6,     6,    30,    10,    10,    19,    19,    19,
    19,    19,    19,    23,    31,    33,    35,    23,    23,     4,
     4,     4,     4,     4,    37 ]

racc_action_pointer = [
     3,     8,   nil,   nil,    37,     6,    15,   nil,   nil,   nil,
    18,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,    25,
   nil,    -2,     2,    30,   nil,   nil,   nil,   nil,   nil,    11,
    17,    31,   nil,    28,   nil,    27,   nil,    37,   nil ]

racc_action_default = [
   -23,   -24,    -1,   -10,   -24,   -24,   -24,   -17,   -18,   -19,
   -22,   -21,   -24,    -2,    -3,    -4,    -5,    -6,    -7,   -24,
    -9,   -24,   -24,   -24,   -16,   -20,    39,    -8,   -11,   -24,
   -24,   -24,   -15,   -24,   -12,   -24,   -13,   -24,   -14 ]

racc_goto_table = [
    21,    19,    24,    25,    27,    10,     1,     2,   nil,   nil,
   nil,    23,   nil,   nil,    27,   nil,    25,    21,    29,    32,
   nil,   nil,   nil,   nil,   nil,   nil,    35 ]

racc_goto_check = [
     6,     5,     9,    12,     4,    11,     1,     2,   nil,   nil,
   nil,    11,   nil,   nil,     4,   nil,    12,     6,     5,     9,
   nil,   nil,   nil,   nil,   nil,   nil,     6 ]

racc_goto_pointer = [
   nil,     6,     7,   nil,   -15,    -3,    -5,   nil,   nil,    -4,
   nil,     5,    -7 ]

racc_goto_default = [
   nil,   nil,   nil,    18,    20,   nil,     4,     7,     6,   nil,
     8,   nil,    11 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 12, :_reduce_none,
  1, 14, :_reduce_none,
  1, 14, :_reduce_none,
  1, 15, :_reduce_none,
  1, 15, :_reduce_none,
  1, 15, :_reduce_none,
  1, 15, :_reduce_none,
  2, 16, :_reduce_none,
  1, 16, :_reduce_9,
  1, 17, :_reduce_none,
  3, 18, :_reduce_11,
  4, 19, :_reduce_12,
  5, 19, :_reduce_13,
  5, 20, :_reduce_14,
  3, 21, :_reduce_15,
  2, 21, :_reduce_16,
  1, 23, :_reduce_none,
  1, 23, :_reduce_none,
  1, 23, :_reduce_19,
  2, 22, :_reduce_20,
  1, 22, :_reduce_21,
  1, 13, :_reduce_22,
  0, 13, :_reduce_23 ]

racc_reduce_n = 24

racc_shift_n = 39

racc_token_table = {
  false => 0,
  :error => 1,
  :QUOTED_STRING => 2,
  :UNQUOTED_STRING => 3,
  :NUMBER => 4,
  :BTRUE => 5,
  :BFALSE => 6,
  :EOL => 7,
  :OPENBRAC => 8,
  :CLOSEBRAC => 9,
  :SLASH => 10 }

racc_nt_base = 11

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "QUOTED_STRING",
  "UNQUOTED_STRING",
  "NUMBER",
  "BTRUE",
  "BFALSE",
  "EOL",
  "OPENBRAC",
  "CLOSEBRAC",
  "SLASH",
  "$start",
  "target",
  "entire_file",
  "string",
  "argument",
  "argument_list",
  "identifier",
  "option",
  "block_begin",
  "block_end",
  "block",
  "statement_list",
  "statement" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

module_eval(<<'.,.,', 'config.racc', 22)
  def _reduce_9(val, _values)
     [val[0]]
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'config.racc', 29)
  def _reduce_11(val, _values)
     Option.new val[0], val[1]
  end
.,.,

module_eval(<<'.,.,', 'config.racc', 33)
  def _reduce_12(val, _values)
     [val[1]]
  end
.,.,

module_eval(<<'.,.,', 'config.racc', 35)
  def _reduce_13(val, _values)
     [val[1], val[2]]
  end
.,.,

module_eval(<<'.,.,', 'config.racc', 39)
  def _reduce_14(val, _values)
     val[2]
  end
.,.,

module_eval(<<'.,.,', 'config.racc', 43)
  def _reduce_15(val, _values)
     Block.new val[0][0], val[0][1], val[1]
  end
.,.,

module_eval(<<'.,.,', 'config.racc', 45)
  def _reduce_16(val, _values)
     Block.new val[0][0], val[0][1]
  end
.,.,

# reduce 17 omitted

# reduce 18 omitted

module_eval(<<'.,.,', 'config.racc', 51)
  def _reduce_19(val, _values)
     nil
  end
.,.,

module_eval(<<'.,.,', 'config.racc', 55)
  def _reduce_20(val, _values)
     val[0] + [val[1]] if val[1]
  end
.,.,

module_eval(<<'.,.,', 'config.racc', 57)
  def _reduce_21(val, _values)
     [val[0]]
  end
.,.,

module_eval(<<'.,.,', 'config.racc', 61)
  def _reduce_22(val, _values)
     val[0]&.compact || []
  end
.,.,

module_eval(<<'.,.,', 'config.racc', 63)
  def _reduce_23(val, _values)
     []
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class CollectdConfig
