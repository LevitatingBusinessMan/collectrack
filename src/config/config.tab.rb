#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.8.1
# from Racc grammar file "config.y".
#

require 'racc/parser.rb'
class CollectdConfigParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     2,     3,     4 ]

racc_action_check = [
     0,     1,     3 ]

racc_action_pointer = [
    -2,     1,   nil,     2,   nil ]

racc_action_default = [
    -8,    -8,    -1,    -8,     5 ]

racc_goto_table = [
     1 ]

racc_goto_check = [
     1 ]

racc_goto_pointer = [
   nil,     0,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 9, :_reduce_1,
  1, 10, :_reduce_none,
  1, 10, :_reduce_none,
  1, 11, :_reduce_none,
  1, 11, :_reduce_none,
  1, 11, :_reduce_none,
  1, 11, :_reduce_none ]

racc_reduce_n = 8

racc_shift_n = 5

racc_token_table = {
  false => 0,
  :error => 1,
  :exp => 2,
  :QUOTED_STRING => 3,
  :UNQUOTED_STRING => 4,
  :NUMBER => 5,
  :BTRUE => 6,
  :BFALSE => 7 }

racc_nt_base = 8

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "exp",
  "QUOTED_STRING",
  "UNQUOTED_STRING",
  "NUMBER",
  "BTRUE",
  "BFALSE",
  "$start",
  "target",
  "string",
  "argument" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'config.y', 6)
  def _reduce_1(val, _values, result)
     print val
    result
  end
.,.,

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class CollectdConfigParser
